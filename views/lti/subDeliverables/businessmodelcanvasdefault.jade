- var addActionLink = '/lti/form/submit/businessmodelcanvas/businessmodelcanvasdefault'
- var keyPartners = getActivity('keypartners')
- var assets = getActivity('assets')
- var differentiators = getActivity('differentiators')
- var revenueStreams = getActivity('revenuestreams')
- var distributionChannels = getActivity('distributionchannels')
- var customerRelationships = getActivity('customerrelationships')
- var customerSegments = getActivity('customersegments')
- var valueProposition = getActivity('valueproposition')
- var costStructure = getActivity('coststructure')
div.canvas-container
  div.canvas-control-container
    div#ckeditor-toolbar
    div.buttons
      div.reset-button-wrapper
          input.reset-button(type='button', value='Cancel')
      div.save-button-wrapper
        i.fa.fa-floppy-o.save-icon
        button.save-button Save
  div.canvas-table
    div.row-7
      div.column-2
        div.canvas-cell.key-partners
          i.fa.fa-user
          span.canvas-cell-header= keyPartners.title
          - var activityId = 'keypartners'
          - var keyPartnersValue = results.find(result => result.name === activityId)
          - var form = keyPartnersValue ? {action: `/lti/form/update/${keyPartnersValue._id}`, data: keyPartnersValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
          include ../form/canvas.jade

      div.column-2
        div.row-5
          div.canvas-cell.differentiators
            i.fa.fa-key
            span.canvas-cell-header= differentiators.title
            - var activityId = 'differentiators'
            - var differentiatorsValue = results.find(result => result.name === activityId)
            - var form = differentiatorsValue ? {action: `/lti/form/update/${differentiatorsValue._id}`, data: differentiatorsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
            include ../form/canvas.jade

        div.row-5
          div.canvas-cell.assets
            i.fa.fa-cubes
            span.canvas-cell-header= assets.title
            - var activityId = 'assets'
            - var assetsValue = results.find(result => result.name === activityId)
            - var form = assetsValue ? {action: `/lti/form/update/${assetsValue._id}`, data: assetsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
            include ../form/canvas.jade

      div.column-2
        div.canvas-cell.value-proposition
          i.fa.fa-check-square-o
          span.canvas-cell-header.canvas-cell-header= valueProposition.title
          - var activityId = 'valueproposition'
          - var valuePropositionValue = results.find(result => result.name === activityId)
          - var form = valuePropositionValue ? {action: `/lti/form/update/${valuePropositionValue._id}`, data: valuePropositionValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
          include ../form/canvas.jade

      div.column-2
        div.row-5
          div.canvas-cell.customer-relationships
            i.fa.fa-users
            span.canvas-cell-header= customerRelationships.title
            - var activityId = 'customerrelationships'
            - var customerRelationshipsValue = results.find(result => result.name === activityId)
            - var form = customerRelationshipsValue ? {action: `/lti/form/update/${customerRelationshipsValue._id}`, data: customerRelationshipsValue.data } :  {action: `${addActionLink}/${activityId}`, data: '' }
            include ../form/canvas.jade

        div.row-5
          div.canvas-cell.distribution-channels
            i.fa.fa-truck
            span.canvas-cell-header= distributionChannels.title
            - var activityId = 'distributionchannels'
            - var distributionChannelsValue = results.find(result => result.name === activityId)
            - var form = distributionChannelsValue ? {action: `/lti/form/update/${distributionChannelsValue._id}`, data: distributionChannelsValue.data } :   {action: `${addActionLink}/${activityId}`, data: '' }
            include ../form/canvas.jade

      div.column-2
        div.canvas-cell.customer-segments
          i.fa.fa-briefcase
          span.canvas-cell-header= customerSegments.title
          - var activityId = 'customersegments'
          - var customerSegmentsValue = results.find(result => result.name === activityId)
          - var form = customerSegmentsValue ? {action: `/lti/form/update/${customerSegmentsValue._id}`, data: customerSegmentsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
          include ../form/canvas.jade

    div.row-3
      div.column-5
        div.canvas-cell.cost-
          i.fa.fa-money
          span.canvas-cell-header= costStructure.title
          - var activityId = 'coststructure'
          - var costStructureValue = results.find(result => result.name === activityId)
          - var form = costStructureValue ? {action: `/lti/form/update/${costStructureValue._id}`, data: costStructureValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
          include ../form/canvas.jade

      div.column-5
        div.canvas-cell.revenue-streams
          i.fa.fa-line-chart
          span.canvas-cell-header= revenueStreams.title
          - var activityId = 'revenuestreams'
          - var revenueStreamsValue = results.find(result => result.name === activityId)
          - var form = revenueStreamsValue ? {action: `/lti/form/update/${revenueStreamsValue._id}`, data: revenueStreamsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
          include ../form/canvas.jade

  script
    :babel
      document.addEventListener('DOMContentLoaded', () => {
        const forms = document.querySelectorAll('.canvas-container .canvas-form')
        const saveButton = document.querySelector('.canvas-container .save-button-wrapper')
        const resetButton = document.querySelector('.canvas-container .reset-button-wrapper')

        saveButton.addEventListener('click', () => {
          forms.forEach(form => {
            form.addEventListener('submit', onCanvasSubmit)
            form.querySelector('input[type="submit"]').click()
          })
        })

        resetButton.addEventListener('click', () => {
          forms.forEach(form => {
            const initialDataHolder = form.querySelector('.initial-editor-data')
            const editor = initialDataHolder.dataset.editorId
            const initialData = initialDataHolder.dataset.initialData
            const bindedEditorId = editor.replace('canvas-', '')

            CKEDITOR.instances[bindedEditorId].setData(initialData)
            CKEDITOR.instances[editor].setData(initialData)
          })
        })

        function onCanvasSubmit(event) {
          event.preventDefault()
          const form = event.target
          const xhr = new XMLHttpRequest()
          const successModal = form.querySelector('.success-modal-wrapper')

          xhr.onreadystatechange = () => {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) {
                successModal.classList.remove('hidden')
                setTimeout(() => successModal.classList.add('hidden'), 3000)
              }
              else {
                throw new Error(xhr, xhr.status)
              }
            }
          }

          xhr.onerror = () => {
            throw new Error(xhr, xhr.status)
          }

          xhr.open('POST', form.action, true)
          xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8")
          xhr.send(JSON.stringify({ data: form.querySelector('textarea').value }))
        }
      })

h2.subdeliverable-title#valueproposition
  span= valueProposition.title
p.subdeliverable-description!= valueProposition.description
div.activity-container

  - var activityId = 'valueproposition'
  - var valuePropositionValue = results.find(result => result.name === activityId)
  - var form = valuePropositionValue ? {action: `/lti/form/update/${valuePropositionValue._id}`, data: valuePropositionValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#customersegments
  span= customerSegments.title
p.subdeliverable-description!= customerSegments.description
div.activity-container

  - var activityId = 'customersegments'
  - var customerSegmentsValue = results.find(result => result.name === activityId)
  - var form = customerSegmentsValue ? {action: `/lti/form/update/${customerSegmentsValue._id}`, data: customerSegmentsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#customerrelationships
  span= customerRelationships.title
p.subdeliverable-description!= customerRelationships.description
div.activity-container

  - var activityId = 'customerrelationships'
  - var customerRelationshipsValue = results.find(result => result.name === activityId)
  - var form = customerRelationshipsValue ? {action: `/lti/form/update/${customerRelationshipsValue._id}`, data: customerRelationshipsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#distributionchannels
  span= distributionChannels.title
p.subdeliverable-description!= distributionChannels.description
div.activity-container

  - var activityId = 'distributionchannels'
  - var distributionChannelsValue = results.find(result => result.name === activityId)
  - var form = distributionChannelsValue ? {action: `/lti/form/update/${distributionChannelsValue._id}`, data: distributionChannelsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#revenuestreams
  span= revenueStreams.title
p.subdeliverable-description!= revenueStreams.description
div.activity-container

  - var activityId = 'revenuestreams'
  - var revenueStreamsValue = results.find(result => result.name === activityId)
  - var form = revenueStreamsValue ? {action: `/lti/form/update/${revenueStreamsValue._id}`, data: revenueStreamsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#differentiators
  span= differentiators.title
p.subdeliverable-description!= differentiators.description
div.activity-container

  - var activityId = 'differentiators'
  - var differentiatorsValue = results.find(result => result.name === activityId)
  - var form = differentiatorsValue ? {action: `/lti/form/update/${differentiatorsValue._id}`, data: differentiatorsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#assets
  span= assets.title
p.subdeliverable-description!= assets.description
div.activity-container

  - var activityId = 'assets'
  - var assetsValue = results.find(result => result.name === activityId)
  - var form = assetsValue ? {action: `/lti/form/update/${assetsValue._id}`, data: assetsValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#keypartners
  span= keyPartners.title
p.subdeliverable-description!= keyPartners.description
div.activity-container

  - var activityId = 'keypartners'
  - var keyPartnersValue = results.find(result => result.name === activityId)
  - var form = keyPartnersValue ? {action: `/lti/form/update/${keyPartnersValue._id}`, data: keyPartnersValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade

h2.subdeliverable-title#coststructure
  span= costStructure.title
p.subdeliverable-description!= costStructure.description
div.activity-container

  - var activityId = 'coststructure'
  - var costStructureValue = results.find(result => result.name === activityId)
  - var form = costStructureValue ? {action: `/lti/form/update/${costStructureValue._id}`, data: costStructureValue.data } : {action: `${addActionLink}/${activityId}`, data: '' }
  include ../form/form.jade
